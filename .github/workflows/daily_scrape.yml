name: Daily Selenium Data Scraper
on:
  # Schedule: Runs every day at 00:00 UTC (midnight)
  schedule:
    - cron: '0 0 * * *'
  # Manual Trigger: Allows you to run this workflow instantly
  workflow_dispatch:

# CRITICAL FIX: Grant explicit write permission to the GITHUB_TOKEN
jobs:
  scrape_and_commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write # This is essential for the stefanzweifel/git-auto-commit-action to work

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          # Includes the necessary libraries for data processing and Selenium
          pip install selenium webdriver-manager pandas 

      - name: Run Scraper Script (with Selenium)
        run: python scraper.py

      # ADDED DIAGNOSTIC STEP: Confirm the file exists before committing
      - name:CRITICAL: Check Directory Contents & File Status 
        run: |
          echo "--- Directory Listing ---"
          ls -lh
          
          echo "--- File Verification ---"
          if [ -f "opec_basket_data.csv" ]; then
            echo "SUCCESS: 'opec_basket_data.csv' found."
            echo "--- First 5 lines of the CSV file ---"
            # Display the first few lines to confirm it has data
            head -n 5 opec_basket_data.csv
          else
            echo "FAILURE: 'opec_basket_data.csv' NOT found. The scraper failed to produce output."
            # Force the workflow to fail here if the file is missing
            exit 1 
          fi

      - name: âž• Commit and Push New Data
        # This action handles setting up Git user details and pushing the file
        uses: stefanzweifel/git-auto-commit-action@v5
        with:
          commit_message: "Data Update: Automated daily OPEC basket scrape via Selenium"
          file_pattern: data/opec_basket_data.csv



